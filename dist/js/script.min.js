"use strict";

var btnPasteText = document.querySelector('.photo-board-btn-paste-text');
var photoDashboard = document.querySelector('.photo-board-dasboard');
var inputLabel = document.querySelector('.photo-board-dasboard-input');
var btnAddSmile = document.querySelector('.photo-board-btn-add-smile');
var inpPhoto = document.querySelector('#inpPhoto');
var downloadPhoto = document.querySelector('.download-photo');
var simplePhoto = document.querySelector('.simple-photo-one');
var boardDashboard = document.querySelector('.photo-board-dasboard');
var previewPhoto = document.querySelector('.preview-photo .photo');
var modalAddPhoto = document.querySelector('.modal-add-photo');
var moneyPhoto = document.querySelector('.money');
var hobbiesPhoto = document.querySelector('.hobbies');
var healthPhoto = document.querySelector('.health');
var lovePhoto = document.querySelector('.love');
var familyLeft = document.querySelector('.family .left');
var familyRight = document.querySelector('.family .right');
var familyOne = document.querySelector('.travel .one');
var familyTwo = document.querySelector('.travel .two');
var familyThree = document.querySelector('.travel .three');
var currentNode = null;
btnPasteText.addEventListener('click', function () {
  inputLabel.focus();
});

var callModal = function callModal(node) {
  modalAddPhoto.style = "\n        display: block;\n    ";
  currentNode = node;
};

var clearBackground = function clearBackground(node, pathImg) {
  var reader = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  node.style = "\n        background-image: ".concat(reader ? "url(".concat(pathImg, ")") : pathImg, ";\n    ");
  node.textContent = '';
};

moneyPhoto.addEventListener('click', callModal(moneyPhoto));
hobbiesPhoto.addEventListener('click', callModal(moneyPhoto));
healthPhoto.addEventListener('click', callModal(moneyPhoto));
lovePhoto.addEventListener('click', callModal(moneyPhoto));
modalAddPhoto.addEventListener('click', function (event) {
  modalAddPhoto.style = "display: none;";
  currentNode = null;
});
inpPhoto.addEventListener('change', function (event) {
  var photo = inpPhoto.files[0];

  if (photo) {
    var reader = new FileReader();
    reader.addEventListener('load', function () {
      clearBackground(previewPhoto, reader.result, true);
      clearBackground(currentNode, reader.result, true);
    });
    reader.readAsDataURL(photo);
  }
});
downloadPhoto.addEventListener('click', function (event) {
  inpPhoto.click();
});
simplePhoto.addEventListener('click', function (event) {
  var backgrpundImage = window.getComputedStyle(simplePhoto).getPropertyValue('background-image');
  clearBackground(previewPhoto, backgrpundImage);
  clearBackground(currentNode, backgrpundImage);
});
btnAddSmile.addEventListener('click', function () {
  document.querySelector('.emoji-picker-icon.emoji-picker').click();
});
html2canvas(document.querySelector(".photo-board-dasboard-photos")).then(function (canvas) {
  document.body.appendChild(canvas);
});
$(function () {
  // Initializes and creates emoji set from sprite sheet
  window.emojiPicker = new EmojiPicker({
    emojiable_selector: '[data-emojiable=true]',
    assetsPath: '../lib/img/',
    popupButtonClasses: 'fa fa-smile-o'
  }); // Finds all elements with `emojiable_selector` and converts them to rich emoji input fields
  // You may want to delay this step if you have dynamically created input fields that appear later in the loading process
  // It can be called as many times as necessary; previously converted input fields will not be converted again

  window.emojiPicker.discover();
});
//# sourceMappingURL=script.min.js.map
