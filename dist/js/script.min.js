"use strict";

var btnPasteText = document.querySelector('.photo-board-btn-paste-text');
var photoDashboard = document.querySelector('.photo-board-dasboard');
var inputLabel = document.querySelector('.photo-board-dasboard-input');
var btnAddSmile = document.querySelector('.photo-board-btn-add-smile');
var inpPhoto = document.querySelector('#inpPhoto');
var downloadPhoto = document.querySelector('.download-photo');
var simplePhoto = document.querySelector('.simple-photo-one');
var boardDashboard = document.querySelector('.photo-board-dasboard');
var previewPhoto = document.querySelector('.preview-photo .photo');
var modalAddPhoto = document.querySelector('.modal-add-photo');
var moneyPhoto = document.querySelector('.money');
btnPasteText.addEventListener('click', function () {
  inputLabel.focus();
});
moneyPhoto.addEventListener('click', function () {
  modalAddPhoto.style = "\n        display: block;\n    ";
});
inpPhoto.addEventListener('change', function () {
  var photo = inpPhoto.files[0];

  if (photo) {
    var reader = new FileReader();
    reader.addEventListener('load', function () {
      previewPhoto.style = "\n                background-image: url(".concat(reader.result, ");\n            ");
      previewPhoto.textContent = '';
    });
    reader.readAsDataURL(photo);
  }
});
downloadPhoto.addEventListener('click', function () {
  inpPhoto.click();
});
simplePhoto.addEventListener('click', function () {
  var backgrpundImage = window.getComputedStyle(simplePhoto).getPropertyValue('background-image');
  previewPhoto.style = "\n        background-image: ".concat(backgrpundImage, ";\n    ");
  previewPhoto.textContent = '';
});
btnAddSmile.addEventListener('click', function () {
  document.querySelector('.emoji-picker-icon.emoji-picker').click();
});
$(function () {
  // Initializes and creates emoji set from sprite sheet
  window.emojiPicker = new EmojiPicker({
    emojiable_selector: '[data-emojiable=true]',
    assetsPath: '../lib/img/',
    popupButtonClasses: 'fa fa-smile-o'
  }); // Finds all elements with `emojiable_selector` and converts them to rich emoji input fields
  // You may want to delay this step if you have dynamically created input fields that appear later in the loading process
  // It can be called as many times as necessary; previously converted input fields will not be converted again

  window.emojiPicker.discover();
});
//# sourceMappingURL=script.min.js.map
