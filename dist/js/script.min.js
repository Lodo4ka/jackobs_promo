"use strict";

window.onload = function () {
  var btnPasteText = document.querySelector('.photo-board-btn-paste-text');
  var photoDashboard = document.querySelector('.photo-board-dasboard');
  var inputLabel = document.querySelector('.photo-board-dasboard-input');
  var btnAddSmile = document.querySelector('.photo-board-btn-add-smile');
  var changeBAckgoundBtn = document.querySelector('.photo-board-btn-change-back');
  var photoBucket = document.querySelector('.photo-board-btn-bucket');
  var inpPhoto = document.getElementById('inpPhoto');
  var downloadPhoto = document.querySelector('.download-photo');
  var downloadDream = document.querySelector('body .download-dream');
  var overlayMobile = document.querySelector('.overlay-mobile');
  var simplePhotoOne = document.querySelector('.simple-photo-one');
  var simplePhotoTwo = document.querySelector('.simple-photo-two');
  var simplePhotoThree = document.querySelector('.simple-photo-three');
  var simplePhotoFour = document.querySelector('.simple-photo-four');
  var simplePhotoFive = document.querySelector('.simple-photo-five');
  var emojiKeyboard = document.querySelector('.emoji-keyboard');
  var emojiKeyboardClose = document.querySelector('.emoji-keyboard-close');
  var modalAddPhoto = document.querySelector('.modal-add-photo');
  var addPhotoInterface = document.querySelector('.add-photo-interface');
  var moneyPhoto = document.querySelector('.money');
  var hobbiesPhoto = document.querySelector('.hobbies');
  var healthPhoto = document.querySelector('.health');
  var lovePhoto = document.querySelector('.love');
  var family = document.querySelector('.family');
  var familyLeft = document.querySelector('.family .left');
  var familyRight = document.querySelector('.family .right');
  var travel = document.querySelector('.travel');
  var travelOne = document.querySelector('.travel .one');
  var travelTwo = document.querySelector('.travel .two');
  var travelThree = document.querySelector('.travel .three');
  var photoBoardDashboard = document.querySelector(".photo-board-dasboard-photos");
  var currentNode = null;

  var generateNodeInitial = function generateNodeInitial(text) {
    var divPhoto = document.createElement('div');
    divPhoto.classList.add('photo');
    divPhoto.textContent = text;
    return divPhoto;
  };

  var initStatePhoto = {
    money: generateNodeInitial('Деньги'),
    hobbies: generateNodeInitial('Хобби'),
    health: generateNodeInitial('Здоровье'),
    love: generateNodeInitial('Любовь'),
    left: generateNodeInitial('Семья'),
    right: generateNodeInitial('Дети'),
    one: generateNodeInitial('Путешествие'),
    two: generateNodeInitial('Путешествие'),
    three: generateNodeInitial('Путешествие')
  };
  btnPasteText.addEventListener('click', function () {
    inputLabel.style.visibility = 'visible';
    inputLabel.focus();
  });

  var clearBackground = function clearBackground(node, pathImg) {
    var reader = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    node.style = "\n            background-image: ".concat(reader ? "url(".concat(pathImg, ")") : pathImg, ";\n            background-repeat: no-repeat;\n            background-size: cover;\n            background-position: center;\n        ");
    node.textContent = '';
  };

  var addPreviewPhoto = function addPreviewPhoto(node, top, left) {
    modalAddPhoto.style = "\n            display: block;\n            transform: rotate(0deg)\n        ";
    addPhotoInterface.style = "\n            display: block;\n            top: ".concat(top, ";\n            left: ").concat(left, ";\n        ");

    if (node.classList.contains('one') || node.classList.contains('two') || node.classList.contains('three')) {
      travel.style.zIndex = '100';
    } else if (node.classList.contains('left') || node.classList.contains('right')) {
      family.style.zIndex = '100';
    } else if (node.classList.contains('photo-board-dasboard')) {
      addPhotoInterface.style.zIndex = '100';
    } else {
      node.style.zIndex = '100';
    }

    node.appendChild(addPhotoInterface);
  };

  var clearPhotoPreview = function clearPhotoPreview(node) {
    if (node.classList.contains('one') || node.classList.contains('two') || node.classList.contains('three')) {
      travel.style.zIndex = null;
    } else if (node.classList.contains('left') || node.classList.contains('right')) {
      family.style.zIndex = null;
    } else if (node.classList.contains('photo-board-dasboard')) {
      addPhotoInterface.style.zIndex = null;
    } else {
      node.style.zIndex = null;
    }

    addPhotoInterface.style = "\n            display: none;\n            top: 0;\n            left: 0;\n        ";
    modalAddPhoto.style = "\n            display: none;\n        ";
  };

  moneyPhoto.addEventListener('click', function () {
    addPreviewPhoto(moneyPhoto, '-65px', '170px');
    currentNode = moneyPhoto;
  });
  hobbiesPhoto.addEventListener('click', function () {
    addPreviewPhoto(hobbiesPhoto, '-140px', '158px');
    currentNode = hobbiesPhoto;
  });
  healthPhoto.addEventListener('click', function () {
    addPreviewPhoto(healthPhoto, '10px', '213px');
    currentNode = healthPhoto;
  });
  lovePhoto.addEventListener('click', function () {
    addPreviewPhoto(lovePhoto, '-108px', '213px');
    currentNode = lovePhoto;
  });
  familyLeft.addEventListener('click', function () {
    addPreviewPhoto(familyLeft, '-161px', '323px');
    currentNode = familyLeft;
  });
  familyRight.addEventListener('click', function () {
    addPreviewPhoto(familyRight, '-161px', '235px');
    currentNode = familyRight;
  });
  travelOne.addEventListener('click', function () {
    addPreviewPhoto(travelOne, '-147px', '400px');
    currentNode = travelOne;
  });
  travelTwo.addEventListener('click', function () {
    addPreviewPhoto(travelTwo, '-147px', '297px');
    currentNode = travelTwo;
  });
  travelThree.addEventListener('click', function () {
    addPreviewPhoto(travelThree, '-147px', '180px');
    currentNode = travelThree;
  });
  Array.from(emojiKeyboard.children).forEach(function (imgEmoji) {
    imgEmoji.classList.add('draggable');
  });
  modalAddPhoto.addEventListener('click', function () {
    modalAddPhoto.style = "display: none;";
    clearPhotoPreview(currentNode);
  });

  var searchOpaAndDelete = function searchOpaAndDelete() {
    Array.from(photoDashboard.children).filter(function (child) {
      return !child.classList.contains('opa');
    }).forEach(function (child) {
      return photoDashboard.append(child);
    });
  };

  inpPhoto.addEventListener('change', function () {
    var photo = inpPhoto.files[0];

    if (photo) {
      var reader = new FileReader();
      reader.addEventListener('load', function () {
        if (currentNode.classList.contains("add-photo-interface")) {
          searchOpaAndDelete();
          var img = document.createElement('img');
          img.style = "\n                        height: 94%;\n                        width: 97%;\n                        position: absolute;\n                        top: 20px;\n                        right: 15px;\n                    ";
          img.src = reader.result;
          img.classList.add('opa');
          photoBoardDashboard.appendChild(img);
          clearPhotoPreview(currentNode);
        } else {
          clearBackground(currentNode, reader.result, true);
          clearPhotoPreview(currentNode);
        }
      });
      reader.readAsDataURL(photo);
    }
  });
  downloadPhoto.addEventListener('click', function () {
    inpPhoto.click();
  });
  simplePhotoOne.addEventListener('click', function (event) {
    event.stopPropagation();
    var backgrpundImage = window.getComputedStyle(simplePhotoOne).getPropertyValue('background-image');

    if (currentNode.classList.contains("photo-board-dasboard")) {
      searchOpaAndDelete();
      var div = document.createElement('div');
      div.style = "\n                height: 94%;\n                width: 97%;\n                position: absolute;\n                top: 20px;\n                right: 15px;\n                background-image: ".concat(backgrpundImage, ";\n                background-repeat: no-repeat;\n                background-size: cover;\n            ");
      div.classList.add('opa');
      photoDashboard.appendChild(div);
    } else {
      clearBackground(currentNode, backgrpundImage);
      clearPhotoPreview(currentNode);
    }
  });
  simplePhotoTwo.addEventListener('click', function (event) {
    event.stopPropagation();
    var backgrpundImage = window.getComputedStyle(simplePhotoTwo).getPropertyValue('background-image');

    if (currentNode.classList.contains("add-photo-interface")) {
      var div = document.createElement('div');
      searchOpaAndDelete();
      div.style = "\n                height: 94%;\n                width: 97%;\n                position: absolute;\n                top: 20px;\n                right: 15px;\n                background-image: ".concat(backgrpundImage, ";\n                background-repeat: no-repeat;\n                background-size: cover;\n            ");
      div.classList.add('opa');
      photoDashboard.appendChild(div);
      clearPhotoPreview(currentNode);
    } else {
      clearBackground(currentNode, backgrpundImage);
      clearPhotoPreview(currentNode);
    }
  });
  simplePhotoThree.addEventListener('click', function (event) {
    event.stopPropagation();
    var backgrpundImage = window.getComputedStyle(simplePhotoThree).getPropertyValue('background-image');

    if (currentNode.classList.contains("add-photo-interface")) {
      var div = document.createElement('div');
      searchOpaAndDelete();
      div.style = "\n                height: 94%;\n                width: 97%;\n                position: absolute;\n                top: 20px;\n                right: 15px;\n                background-image: ".concat(backgrpundImage, ";\n                background-repeat: no-repeat;\n                background-size: cover;\n            ");
      div.classList.add('opa');
      photoDashboard.appendChild(div);
      clearPhotoPreview(currentNode);
    } else {
      clearBackground(currentNode, backgrpundImage);
      clearPhotoPreview(currentNode);
    }
  });
  simplePhotoFour.addEventListener('click', function (event) {
    event.stopPropagation();
    var backgrpundImage = window.getComputedStyle(simplePhotoFour).getPropertyValue('background-image');

    if (currentNode.classList.contains("add-photo-interface")) {
      var div = document.createElement('div');
      searchOpaAndDelete();
      div.style = "\n                height: 94%;\n                width: 97%;\n                position: absolute;\n                top: 20px;\n                right: 15px;\n                background-image: ".concat(backgrpundImage, ";\n                background-repeat: no-repeat;\n                background-size: cover;\n            ");
      div.classList.add('opa');
      photoDashboard.appendChild(div);
      clearPhotoPreview(currentNode);
    } else {
      clearBackground(currentNode, backgrpundImage);
      clearPhotoPreview(currentNode);
    }
  });
  simplePhotoFive.addEventListener('click', function (event) {
    event.stopPropagation();
    var backgrpundImage = window.getComputedStyle(simplePhotoFive).getPropertyValue('background-image');

    if (currentNode.classList.contains("add-photo-interface")) {
      var div = document.createElement('div');
      searchOpaAndDelete();
      div.style = "\n                height: 94%;\n                width: 97%;\n                position: absolute;\n                top: 20px;\n                right: 15px;\n                background-image: ".concat(backgrpundImage, ";\n                background-repeat: no-repeat;\n                background-size: cover;\n            ");
      div.classList.add('opa');
      photoDashboard.appendChild(div);
      clearPhotoPreview(currentNode);
    } else {
      clearBackground(currentNode, backgrpundImage);
      clearPhotoPreview(currentNode);
    }
  });
  btnAddSmile.addEventListener('click', function () {
    emojiKeyboard.style.display = 'block';
  });
  interact('.draggable').draggable({
    inertia: true,
    modifiers: [interact.modifiers.restrictRect({
      restriction: 'parent',
      endOnly: true
    })],
    listeners: {
      start: function start(e) {
        var element = e.target;
        element.style.maxHeight = '3rem';
        element.style.zIndex = '1000';
        element.style.position = 'absolute';
        photoDashboard.classList.add('draggable');
        photoDashboard.appendChild(element);
      },
      move: dragMoveListener,
      // call this function on every dragend event
      end: function end(event) {
        emojiKeyboard.style.display = 'none';
        photoDashboard.classList.remove('draggable');
      }
    }
  });

  function dragMoveListener(event) {
    var target = event.target; // keep the dragged position in the data-x/data-y attributes

    var x = (parseFloat(target.getAttribute('data-x')) || 460) + event.dx;
    var y = (parseFloat(target.getAttribute('data-y')) || -20) + event.dy; //   ;
    // translate the element
    // target.style.webkitTransform =

    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';
    target.setAttribute('data-x', x);
    target.setAttribute('data-y', y);
  } // this function is used later in the resizing and gesture demos


  window.dragMoveListener = dragMoveListener;
  downloadDream.addEventListener('click', function () {
    html2canvas(photoDashboard, {
      y: 300
    }).then(function (canvas) {
      saveAs(canvas.toDataURL(), 'screen.png');
    })["catch"](function (err) {
      debugger;
    });

    function saveAs(uri, filename) {
      var link = document.createElement('a');

      if (typeof link.download === 'string') {
        link.href = uri;
        link.download = filename; //Firefox requires the link to be in the body

        document.body.appendChild(link); //simulate click

        link.click(); //remove the link when done

        document.body.removeChild(link);
      } else {
        window.open(uri);
      }
    }
  });
  changeBAckgoundBtn.addEventListener('click', function (event) {
    var round = changeBAckgoundBtn.querySelector('.round');

    if (round) {
      overlayMobile.style = "\n                position: absolute;\n                background-color: black;\n                top: 0;\n                width: 100%;\n                height: 2000px;\n            ";
    } else {
      addPreviewPhoto(photoDashboard, '110px', '-170px');
      currentNode = addPhotoInterface;
    }
  });
  emojiKeyboardClose.addEventListener('click', function () {
    emojiKeyboard.style.display = 'none';
  });
  photoBucket.addEventListener('click', function () {
    var newChild = Array.from(photoBoardDashboard.children).filter(function (child) {
      return !child.classList.contains('draggable');
    }).map(function (child) {
      if (child.className === 'family') {
        Array.from(child.children).forEach(function (childInner) {
          var newNodeInner = initStatePhoto[childInner.className];

          if (newNodeInner) {
            removeAllChildNodes(childInner);
            childInner.appendChild(newNodeInner);
          }
        });
      } else if (child.className === 'travel') {
        Array.from(child.children).forEach(function (childInner) {
          var newNodeInner = initStatePhoto[childInner.className];
          removeAllChildNodes(childInner);
          childInner.appendChild(newNodeInner);
        });
      } else {
        var newNode = initStatePhoto[child.className];
        removeAllChildNodes(child);
        child.appendChild(newNode);
      }

      return child;
    });
    removeAllChildNodes(photoBoardDashboard);
    newChild.forEach(function (child) {
      photoBoardDashboard.appendChild(child);
    });
    Array.from(photoDashboard.children).forEach(function (child) {
      child.classList.contains('draggable') && photoDashboard.removeChild(child);
    });
    var opa = document.querySelector('.opa');

    if (opa) {
      photoDashboard.removeChild(document.querySelector('.opa'));
    }
  });

  function removeAllChildNodes(parent) {
    while (parent.firstChild) {
      parent.removeChild(parent.firstChild);
    }
  }
};
//# sourceMappingURL=script.min.js.map
